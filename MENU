Step:
menu_x += (menu_x_target - menu_x) / menu_speed;


if (menu_control)

{
	if (keyboard_check_pressed(vk_up))
	{
	menu_cursor++;
	if (menu_cursor >= menu_items) menu_cursor = 0;
	} 

 if (keyboard_check_pressed(vk_down))
	{
	menu_cursor--;
	if (menu_cursor < 0) menu_cursor =  menu_items - 1;
	} 

	 if (keyboard_check_pressed(vk_enter))
	{
	 menu_x_target = gui_width+500;
	 menu_committed = menu_cursor;
	 menu_control = false;
	}

}

if (menu_x > gui_width+150) && (menu_committed != -1)
{
	switch (menu_committed)
	{
		case 2: default: room_goto_next(); break;
		case 1: default: 
		{
			if (!file_exists(SAVEFILE))
			{
				room_goto_next();
			}
			else
			{
				var file = file_text_open_read(SAVEFILE);
				var target  = file_text_read_real(file) 
				file_text_close(file);
				room_goto(target);
				

			}
			
		}
		break;
		case 0: default: game_end() ; break;
	}

}

DRAW GUI:

// Draw Menu

draw_set_font(Font2);
draw_set_halign(fa_bottom);
draw_set_valign(fa_bottom);


for (var i = 0; i < menu_items; i ++)
{
	var offset = 2;
	var txt = menu[i];
	if (menu_cursor == i)
	{
		txt = string_insert("> ", txt, 0);
		var col = c_gray;
	}

	else 
	{
	 var col =  c_white;
	}
	var xx = menu_x;
	var yy = menu_y - (menu_itemheight * (i * 1.6));
	draw_set_color(c_black)
	draw_text(xx-offset,yy,txt);
	draw_text(xx+offset,yy,txt);
	draw_text(xx,yy+offset,txt);
	draw_text(xx,yy-offset,txt);
	draw_set_color(col);
	draw_text(xx,yy,txt);
	
	

}





CREATE:

#macro SAVEFILE "Save.sav"

gui_width = display_get_gui_width();
gui_height = display_get_gui_height();
gui_margin = 45;

menu_x = gui_width +200;
menu_y = gui_height - gui_margin;
menu_x_target = gui_width - gui_margin;
menu_speed = 25;
menu_itemheight = font_get_size(Font1);
menu_committed = -1;
menu_control = true;

menu[2] = "New Game";
menu[1] = "Continue";
menu[0] =  "Quit";

menu_items = array_length_1d(menu);
menu_cursor = 2;
